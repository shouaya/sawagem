import React, { Component } from 'react';
import './App.css';
import Guide from './Guide';
{{# sheet_arr}}
import {{page_name}} from './pages/{{page_name}}'
{{/ sheet_arr}}
import CustomMenu from './CustomMenu'
import CustomRoute from './CustomRoute'
import {
  BrowserRouter as Router,
  Route,
  Link
} from 'react-router-dom'
import { Menu, Divider, Header, Segment, Button, Image } from 'semantic-ui-react'

class App extends Component {
  state = {user:null, users: [], login:false}

  handleItemClick = (e, { name }) => this.setState({ activeItem: name })
  
  getCookie(name) {
	  var value = "; " + document.cookie;
	  var parts = value.split("; " + name + "=");
	  if (parts.length === 2) return parts.pop().split(";").shift();
  }
  
  deleteCookie(name) {
	  document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  }
  
  onError(res){
	  if(res.status === 403 || res.status === 401){
		  this.deleteCookie("uid")
	      this.deleteCookie("tooken")
	      this.setState({ login:false })
	  }
  }
  
  componentWillMount(){
      let uid = this.getCookie("uid")
      let token = this.getCookie("tooken")
      if(uid !== null && token !== null){
    	let str = localStorage.getItem(uid)
        let user = JSON.parse(str)
        this.setState({ user: user, login:true })
      }
  }
  
  onLogin(user){
	  this.setState({ user: user, login:true })
	  localStorage.setItem(user.phone, JSON.stringify(user))
  }
  
  onLogout(user){
	  this.deleteCookie("uid")
      this.deleteCookie("tooken")
	  this.setState({ login:false })
	  localStorage.clear();
  }

  render() {
	const { activeItem } = this.state
	if(!this.state.login) return  <Guide onLogin={this.onLogin.bind(this)} login={this.state.login}/>
	const admin = this.state.user.role === "ADMIN"
    return (
      <Router>
      <div>
      <Header className="miniheader">
		<Link to='/'>
		&nbsp;&nbsp;&nbsp;
			<Image src='http://s3.9jialu.com/whale64.png' size='tiny' wrapped verticalAlign='bottom'/>
				<span className="minititle">クジラ・データ</span>
		</Link>
		<Divider />
		<Segment inverted className="minimenu">
        <Menu inverted pointing secondary>
        {{# sheet_arr}}
			<Menu.Item style={ {display: admin ? 'block' : 'none'} } name='{{resource_path}}' active={activeItem === '{{resource_path}}'} as={Link} to='/{{resource_path}}' onClick={this.handleItemClick} >{{model_title}}</Menu.Item>
		{{/ sheet_arr}}
		<CustomMenu activeItem={activeItem} onClick={this.handleItemClick} />
		<Menu.Menu position='right'>
          <Menu.Item>
            <Button primary onClick={this.onLogout.bind(this)}>Sign out</Button>
          </Menu.Item>
        </Menu.Menu>
        </Menu>
        </Segment>
        </Header>
		<Route exact path="/" render={() => <Guide onLogin={this.onLogin.bind(this)} login={this.state.login} onError={this.onError.bind(this)}/>} />
		{{# sheet_arr}}
		<Route path='/{{resource_path}}' render={() => <{{page_name}} onError={this.onError.bind(this)}/>}/>
		{{/ sheet_arr}}
		<CustomRoute onError={this.onError.bind(this)}/>
		<div className="footer">
			<p className="footer__text">Copyright © 2007-2017 E-Business Corporation. All Rights Reserved.</p>
		</div>
	  </div>
	  </Router>
    );
  }
}

export default App;
