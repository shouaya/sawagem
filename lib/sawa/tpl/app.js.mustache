import React, { Component } from 'react';
import './App.css';
import Guide from './Guide';
import Online from './Online';
{{# sheet_arr}}
import {{page_name}} from './pages/{{page_name}}'
{{/ sheet_arr}}
import {
  BrowserRouter as Router,
  Route,
  Link
} from 'react-router-dom'
import { Menu, Divider, Header } from 'semantic-ui-react'

class App extends Component {
  state = {webSocket: null, user:null, users: [], login:false}

  handleItemClick = (e, { name }) => this.setState({ activeItem: name })
  
  onOpen(event) {
	this.setState({ login:true })
  }
  
  onClose(event) {
	this.setState({ webSocket: null, users:[], login:false })
  }
  
  componentWillMount(){
	  let webSocket = new WebSocket("ws://localhost:3000/ws/");
	  webSocket.onopen = this.onOpen.bind(this);
	  webSocket.onclose = this.onClose.bind(this);
	  this.setState({ webSocket: webSocket })
  }
  
  onlineChange(users){
	  this.setState({ users: users })
  }
  
  onLogin(user){
	  let webSocket = new WebSocket("ws://localhost:3000/ws/");
	  webSocket.onopen = this.onOpen.bind(this);
	  webSocket.onclose = this.onClose.bind(this);
	  this.setState({ webSocket: webSocket, user: user, login:true })
  }

  render() {
	const { activeItem } = this.state
	if(!this.state.login) return  <Guide onLogin={this.onLogin.bind(this)} login={this.state.login}/>
    return (
      <Router>
      <div className="body">
		<Link to='/'>
			<Header as='h1'>KPF</Header>
		</Link>
        <Menu>
        {{# sheet_arr}}
			<Menu.Item name='{{resource_path}}' active={activeItem === '{{resource_path}}'} as={Link} to='/{{resource_path}}' onClick={this.handleItemClick} >{{model_title}}</Menu.Item>
		{{/ sheet_arr}}
		    <Menu.Item name='online' active={activeItem === 'online'} as={Link} to='/online' onClick={this.handleItemClick} >OnLine</Menu.Item>
        </Menu>
	    <Divider />
		<Route exact path="/" render={() => <Guide onLogin={this.onLogin.bind(this)} login={this.state.login}/>} />
		{{# sheet_arr}}
		<Route path='/{{resource_path}}' component={ {{page_name}} }/>
		{{/ sheet_arr}}
		<Route path='/online' render={() => <Online webSocket={this.state.webSocket} users={this.state.users} onlineChange={this.onlineChange.bind(this)}/>}/>
	  </div>
	  </Router>
    );
  }
}

export default App;
